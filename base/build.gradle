apply plugin: 'com.android.library'

android {
    compileSdkVersion build_versions.compileSdkVersion
    buildToolsVersion build_versions.buildToolsVersion

    defaultConfig {
        minSdkVersion build_versions.minSdkVersion
        targetSdkVersion build_versions.targetSdkVersion
        versionCode build_versions.versionCode
        versionName build_versions.versionName

        manifestPlaceholders = [baidu_for_app_key: build_app_key.baidu_for_app_key]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            res.srcDirs += [
                    'src/main/res/layouts/activity',
                    'src/main/res/layouts/fragment',
                    'src/main/res/layouts/widget',
                    'src/main/res/layouts/dialog',
                    'src/main/res/layouts/item'
            ]
            switch ("${build_versions.applicationId}"){
                case "com.pine.project1":
                    java.srcDirs += ['src/project1/java']
                    res.srcDirs += ['src/project1/res']
                    break
                default:
                    java.srcDirs += ['src/default/java']
                    res.srcDirs += ['src/default/res']
                    break
            }
            jniLibs.srcDir 'libs'
            jni.srcDirs = []    //disable automatic ndk-build
        }
    }
    resourcePrefix "base_"
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // google官方 dependency begin
    compile build_dependency["google_gson"]
    // google官方 dependency end

    // 第三方 dependency begin
    compile build_dependency["nohttp_okhttp"]
    compile build_dependency["aigestudio_wheelpicker"]
    compile build_dependency['safewebviewbridge']
    compile build_dependency['bumptech_glide']
    annotationProcessor build_dependency['bumptech_glide_compiler']
    compile(name: build_dependency["sina_weibo_sdk"], ext: 'aar')
    // 第三方 dependency end

    // library project begin
    compile project(':base-lib-immersionbar')
    // library project end

    // 路由模块 begin
    compile project(':router')
    // 路由模块 end
}
